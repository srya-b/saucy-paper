F_com (Ps, Pr):
---------------

- On input (witness, x) from P_r:
	save x
	leak x
Then
	- On input (commit, x) from P_s:
		save x'
	Then
		- On input (open) from P_s:
			if x == x':
				Send (open) to P_r
			()

Prot_com _receiver:
-------------------

- On input (witness, x) from Z:
	save x
Then
	- On input (Msg, Send(Ps, C)) from F_crs:
		save C
	Then
		- On input (Msg, Send(Ps, (x',r'))) from F_crs:
			g,h = get_crs 
			C' = g^x' h^r'
			if C == C then
				send (open) to Z
			else ()

Proc_com_sender:
----------------

- On input (commit, x) from Z:
	save x
	let g,h = crs
	r = sample k
	C = g^x h^r
	Send (Send, Pr, C) to F_chan
Then
	- On input (open) from Z:
		Send (Send, Pr, (x,r)) to F_chan
		()

=================================================================

sim_com_sender:
---------------

- On input (getCRS) from Z:
	let g,h = crs
	send (g,h) to Z 
Then
	- On input (Leak, x) from F_com:
		save x
	Then
		- On input (A2P, Ps, Send(Pr, C)) from Z:
			save C
		Then
			- On input (A2P, Ps(Pr, (x',r'))) from Z:
				C' = g^x' h^r'
				if C == C' then 
					Send (commit, x) to Pr 
			Then
				-On input (A2P, (
			
	


